<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <servlet>
        <servlet-name>RegisterServlet</servlet-name>
        <servlet-class>com.lea.controller.RegisterServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>RegisterServlet</servlet-name>
        <url-pattern>/reg</url-pattern>
    </servlet-mapping>
<!--    注册监听器ContextLoaderListener
    监听器被创建之后会读取/WEB-INF/applicationContext.xml
    在监听器中创建ApplicationContext对象，需要加载配置文件。
    /WEB-INF/applicationContext.xml就是默认的读取配置文件路劲

    可以修改默认的读取文件路径，使用context-param重新指定文件的位置

    配置监听器：目的是创建容器对象，就能把applicationContext.xml配置文件中的所有对象创建好，并放在ServletContext中，
    让每次请求能直接拿到容器对象
-->
    <context-param>
<!--        contextConfigLocation:表示配置文件的路径-->
        <param-name>contextConfigLocation</param-name>
<!--        自定义配置文件的路径-->
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
</web-app>